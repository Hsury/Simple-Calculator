/*
 * 项目名称：简易计算器
 * 版本：2016/10/23
 */
#include <EEPROM.h> //导入EEPROM操作库
#include <Keypad.h> //导入扫描键盘库
#include <U8glib.h> //导入OLED驱动库
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE); //采用SSD1306芯片方案并以I2C方式与OLED进行沟通
const byte ROWS = 4; //设置矩阵键盘行数为4
const byte COLS = 4; //设置矩阵键盘列数为4
char str[9] = ""; //以字符串形式存储输入的数字内容
int x = 0; //动画坐标
int symbol = 0; //运算符号位
double a = 0; //方程参数a
double b = 0; //方程参数b
double result = 0; //基本运算结果
short arrow = 0; //字符串指针
short buzzer = 0; //声音
short deltime = 0; //删除键按下时长
short digits = 0; //精度
short light = 0; //LED强度
short maxlength = 0; //允许输入的最大长度
short menu = 0; //附加功能状态
short numtosave = 0; //预存数字
short savednum = 0; //已存数字
short stat = 0; //状态指示
char keys[ROWS][COLS] = { //开数组以映射按键
  {'7', '8', '9', '+'},
  {'4', '5', '6', '-'},
  {'1', '2', '3', '*'},
  {'0', '.', '=', '/'}
};
byte rowPins[ROWS] = {5, 6, 13, 12}; //设置矩阵键盘行引脚
byte colPins[COLS] = {3, 4, 7, 8}; //设置矩阵键盘列引脚

static unsigned char u8g_welcome[] U8G_PROGMEM = //欢迎
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x00, 0x00, 0x80, 0x00, 0x02, 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0x30, 0x80, 0xFF, 0x87, 0x01, 0x02, 0xF8, 0xFF, 0xF1, 0xF3, 0x03, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x87, 0x00, 0x04, 0x03, 0x02, 0x2C, 0x24, 0x10, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x50, 0x80, 0x00, 0x04, 0x02, 0x02, 0x64, 0x66, 0x10, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x90, 0xD9, 0x80, 0xFF, 0x07, 0x00, 0x02, 0x42, 0x22, 0xF0, 0xF3, 0x03, 0x00, 0x00, 0x00, 0x00, 0x28, 0x89, 0x80, 0x00, 0x04, 0x00, 0x02, 0xF8, 0x7F, 0x10, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0xFE, 0x83, 0x00, 0xC4, 0xFB, 0xFF, 0x08, 0x40, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x82, 0xFF, 0x07, 0x02, 0x02, 0xF8, 0x7F, 0xF8, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x7F, 0x02, 0x02, 0x04, 0x02, 0x02, 0x08, 0x40, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x10, 0x41, 0x02, 0x03, 0x00, 0x02, 0x02, 0xF8, 0x7F, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x41, 0x82, 0xFF, 0x0F, 0x02, 0x02, 0x08, 0x40, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x7F, 0xC2, 0x88, 0x08, 0x02, 0x02, 0xF8, 0x7F, 0x3C, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x10, 0x41, 0x62, 0x8C, 0x08, 0x02, 0x02, 0x20, 0x10, 0xF0, 0xF3, 0x03, 0x00, 0x00, 0x00, 0x00, 0x10, 0x41, 0x02, 0x44, 0x08, 0x22, 0x02, 0xFE, 0xFF, 0x11, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x10, 0x7F, 0x02, 0x63, 0x08, 0x3A, 0x02, 0x20, 0x10, 0x10, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x10, 0x01, 0x82, 0x31, 0x08, 0x0E, 0x02, 0x30, 0x10, 0xF0, 0xF3, 0x03, 0x00, 0x00, 0x00, 0x00, 0x10, 0xC0, 0x61, 0x18, 0x0C, 0x07, 0x02, 0x0C, 0x10, 0x10, 0x12, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x3F, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_uestc[] U8G_PROGMEM = //UESTC
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0x70, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xE0, 0x1C, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x80, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x80, 0x07, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x60, 0xC0, 0x1C, 0x10, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x08, 0x00, 0x08, 0x00, 0x01, 0x00, 0x09, 0x40, 0x60, 0x38, 0x10, 0x80, 0x01, 0xC0, 0x04, 0x20, 0x08, 0x40, 0x08, 0x00, 0x01, 0x20, 0x05, 0x40, 0x20, 0x60, 0x10, 0x80, 0x01, 0x20, 0x02, 0x00, 0x0A, 0x40, 0x08, 0x00, 0x01, 0x60, 0x0E, 0xC0, 0x1E, 0x40, 0x08, 0x80, 0x0F, 0x00, 0x03, 0xC0, 0x0C, 0x40, 0x1C, 0x00, 0x09, 0xC0, 0x33, 0x80, 0x3F, 0x80, 0x08, 0xF0, 0x19, 0x00, 0x3E, 0x78, 0x0A, 0xC0, 0x0F, 0x00, 0x0F, 0x20, 0x62, 0xA2, 0x21, 0xDE, 0x67, 0xD0, 0x1B, 0xC0, 0x03, 0xE0, 0x0E, 0x70, 0x04, 0xE0, 0x07, 0xC8, 0x1D, 0xA2, 0x6D, 0x02, 0x95, 0xD0, 0x09, 0x78, 0x02, 0x50, 0x7C, 0x50, 0x1E, 0xE0, 0x01, 0x48, 0x02,
  0xA2, 0x71, 0x0E, 0x13, 0xE0, 0x0B, 0x08, 0x02, 0xC8, 0x0B, 0x40, 0x09, 0x80, 0x03, 0x00, 0x3E, 0xA2, 0x6D, 0x10, 0x93, 0xE0, 0x0F, 0x00, 0x02, 0x4C, 0x08, 0x70, 0x0E, 0x80, 0x06, 0xE0, 0x03, 0x1C, 0x33, 0x9E, 0x65, 0x80, 0x81, 0x00, 0x02, 0x40, 0x08, 0x58, 0x0E, 0xC0, 0x0C, 0x10, 0x02, 0x80, 0x3E, 0xC0, 0x08, 0x00, 0xC1, 0x00, 0x02, 0x40, 0x10, 0xC8, 0x33, 0x60, 0x30, 0x00, 0x02, 0xC0, 0x30, 0x60, 0x18, 0x00, 0xFE, 0x00, 0x02, 0x00, 0x10, 0x60, 0xF0, 0x38, 0xF0, 0x01, 0x02, 0x40, 0x70, 0x30, 0x10, 0x00, 0x00, 0x80, 0x03, 0x00, 0x10, 0x40, 0x00, 0x00, 0x00, 0x80, 0x03, 0x60, 0xC0, 0x38, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x0F, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x07, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x1F, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xE0, 0x3C, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7F, 0xF0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_error[] U8G_PROGMEM = //错误
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x28, 0x88, 0x10, 0x00, 0xF0, 0x0C, 0x52, 0xE2, 0xFF, 0x23, 0x62, 0x22, 0x00, 0x00, 0x00, 0x50, 0xFF, 0x2A, 0x0D, 0x30, 0x90, 0x1C, 0x34, 0x02, 0x10, 0x50, 0x1E, 0x24, 0x80, 0x03, 0x00, 0x60, 0x29, 0xDC, 0x3F, 0x30, 0x50, 0x12, 0x7F, 0x1F, 0x08, 0x88, 0x02, 0x28, 0x40, 0x02, 0x00, 0xC0, 0xFF, 0x08, 0x02, 0x30, 0x50, 0x63, 0x18, 0x09, 0x0C, 0xFC, 0x42, 0x20, 0x20, 0x04, 0x00, 0x70, 0xFF, 0xFE, 0x1F, 0x30, 0xD0, 0xBF, 0xBE, 0x09, 0x0A, 0x00, 0x7F, 0xFF, 0x27, 0x04, 0x00, 0x40, 0xA9, 0x08, 0x02, 0x30, 0x90, 0x08, 0xD3, 0x09, 0x2A, 0xF8, 0x00, 0x20, 0x24, 0x04, 0x00,
  0x60, 0xFF, 0x1C, 0x02, 0x30, 0x90, 0xFF, 0x08, 0x06, 0xC9, 0x88, 0x42, 0x20, 0x24, 0xC4, 0x09, 0xE0, 0x7E, 0xEC, 0x3F, 0x30, 0x90, 0x08, 0x7F, 0x86, 0x88, 0xF9, 0x32, 0xD0, 0x24, 0x24, 0x07, 0xD0, 0x42, 0x0A, 0x00, 0x00, 0xF0, 0x2A, 0x42, 0x46, 0x08, 0x8A, 0x0E, 0x90, 0x25, 0x04, 0x00, 0x50, 0x7E, 0x8A, 0x14, 0x30, 0x10, 0x49, 0x3C, 0x26, 0x08, 0xF8, 0x42, 0x08, 0x44, 0x02, 0x00, 0x50, 0x42, 0xC8, 0x3D, 0x30, 0x90, 0x88, 0xAC, 0x09, 0x08, 0x88, 0x42, 0x06, 0xC4, 0x01, 0x00, 0x40, 0x7E, 0x28, 0x29, 0x00, 0x10, 0x0E, 0xC3, 0x10, 0x08, 0xE8, 0x7E, 0xC3, 0x03, 0x00, 0x00, 0x40, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_menu[] U8G_PROGMEM = //菜单
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x20, 0xE0, 0x3F, 0x00, 0x00, 0x08, 0x00, 0x01, 0xF2, 0x87, 0x10, 0x80, 0x00, 0xF9, 0x03, 0x00, 0x41, 0x20, 0x20, 0x00, 0x00, 0x14, 0xF8, 0x3F, 0x12, 0x46, 0x18, 0x00, 0x01, 0x02, 0x02, 0x00, 0xFF, 0xE7, 0x3F, 0x00, 0x00, 0x26, 0x80, 0x07, 0x26, 0xE2, 0xFB, 0xFC, 0x9F, 0x00, 0x02, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x43, 0x78, 0x38, 0xCB, 0x21, 0x8A, 0x04, 0x90, 0x7C, 0x02, 0xC0, 0x01, 0xE1, 0x3F, 0x00, 0xC0, 0x80, 0x00, 0x00, 0xE3, 0x21, 0x86, 0x60, 0x82, 0x44, 0x02, 0x00, 0x8D, 0x00, 0x00, 0x00, 0x60, 0x08, 0xFB, 0xFF, 0x1A, 0x2E, 0x8A, 0x18, 0x8C, 0x7C, 0x02,
  0x00, 0xF1, 0xF8, 0xFF, 0xFF, 0x1F, 0x08, 0x00, 0x10, 0x82, 0xE0, 0x93, 0x06, 0x90, 0x44, 0x02, 0x00, 0xE1, 0x00, 0x02, 0x00, 0x00, 0x08, 0xF0, 0x13, 0xF2, 0x27, 0xA2, 0xF8, 0x87, 0x44, 0x02, 0x00, 0xB1, 0x41, 0x7E, 0x00, 0x00, 0x08, 0x10, 0x12, 0x82, 0x20, 0x82, 0x80, 0x80, 0x7C, 0x02, 0x00, 0x0D, 0x62, 0x02, 0x00, 0x00, 0x08, 0x10, 0x12, 0x82, 0x20, 0x82, 0x80, 0x80, 0x04, 0x02, 0x80, 0x02, 0xF0, 0x02, 0x00, 0x00, 0x08, 0xF0, 0x13, 0x82, 0xE0, 0x83, 0x80, 0x80, 0x00, 0x02, 0x40, 0xFC, 0x1F, 0xFF, 0x00, 0x00, 0x08, 0x10, 0x1C, 0xFA, 0x2F, 0xF2, 0xFC, 0x9F, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC2, 0x01, 0x80, 0x4B, 0x8A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x41, 0x81, 0x80, 0x4A, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0xC0, 0xC1, 0x80, 0x4B, 0xA2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x00, 0x40, 0x01, 0x48, 0xA2, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x00, 0x20, 0x01, 0x48, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0xE0, 0x03, 0x48, 0xA2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x48, 0xA2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x00, 0x00, 0x00, 0x48, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x48, 0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x48, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_eeprom[] U8G_PROGMEM = //掉电保存
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x02, 0x10, 0x40, 0x7F, 0x20, 0x40, 0x4A, 0x90, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3E, 0x10, 0x60, 0x41, 0xFF, 0x9F, 0x46, 0x90, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x82, 0xFF, 0x21, 0x41, 0x10, 0xE0, 0xEF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x9F, 0x10, 0x21, 0x41, 0xE8, 0x0F, 0x23, 0x91, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x90, 0x10, 0x31, 0x7F, 0x04, 0xCC, 0x37, 0x91, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x9F, 0xFF, 0x39, 0x49, 0x04, 0x62, 0x3A, 0xB1, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x90, 0x10, 0x29, 0x08, 0x06, 0x01, 0xC1, 0x9C, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xCE, 0x9F, 0x10, 0xA1, 0xFF, 0xF5, 0xFF, 0xCF, 0x90, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x82, 0xFF, 0x21, 0x1C, 0x04, 0x41, 0xC8, 0x90, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0xBF, 0x10, 0x24, 0x2A, 0x04, 0x81, 0xC7, 0x50, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x02, 0x10, 0x24, 0x49, 0x04, 0x81, 0x35, 0x51, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x02, 0xF0, 0xA3, 0x88, 0xC4, 0x61, 0x18, 0x3E, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_fx[] U8G_PROGMEM = //解方程
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x01, 0xF6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0x03, 0x00, 0xC8, 0x00, 0x82, 0x13, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x80, 0x00, 0x09, 0x02, 0xC0, 0xFF, 0xFF, 0x7F, 0x12, 0x04, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x80, 0xC0, 0xFB, 0x03, 0x00, 0x08, 0x40, 0x80, 0xF7, 0x07, 0x00, 0x80, 0x00, 0x80, 0x02, 0x00, 0x80, 0x00, 0x09, 0x02, 0x80, 0x09, 0x41, 0x00, 0x02, 0x80, 0x09, 0x82, 0xC0, 0xC1, 0x22, 0x08, 0x80, 0x8E, 0x0B, 0x02, 0x00, 0xDB, 0xC0, 0x1F, 0xF7, 0x4F, 0x12, 0x81, 0x60, 0x42, 0x46, 0xC4, 0x8F, 0x99, 0xFF, 0x03, 0x00, 0x68, 0x40, 0x10, 0x87, 0x00, 0xA2, 0xF0, 0x27, 0x22, 0x84, 0x02, 0x80, 0x90, 0x4D, 0x02,
  0x00, 0x6C, 0x40, 0x10, 0x8B, 0xC0, 0x43, 0x80, 0xE0, 0x03, 0x00, 0x01, 0x80, 0x50, 0x49, 0x06, 0x00, 0x8B, 0x20, 0x90, 0xF2, 0x27, 0xE2, 0x80, 0x20, 0x00, 0x80, 0xC3, 0x8F, 0x50, 0x89, 0x01, 0xC0, 0x08, 0x33, 0x90, 0x82, 0x20, 0x33, 0x81, 0x60, 0x02, 0xC0, 0x04, 0x80, 0x19, 0x49, 0x01, 0x00, 0x08, 0x18, 0x18, 0x82, 0xC0, 0x1A, 0x02, 0xC0, 0x01, 0x60, 0x08, 0x80, 0x0E, 0x39, 0x03, 0x00, 0x0E, 0x0C, 0x0F, 0xFA, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_developers[] U8G_PROGMEM = //开发者
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0x91, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x90, 0x08, 0x7E, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x48, 0x00, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xF8, 0x9F, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x41, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xE0, 0x0F, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x60, 0x88, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x90, 0x04, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x20, 0x10, 0x03, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x20, 0x88, 0x07, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x74, 0x18, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x08, 0x40, 0x84, 0xFF, 0x01, 0x00, 0x12, 0x01, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0x09, 0xF8, 0x9F, 0x0C, 0x01, 0x00, 0xB5, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0x40, 0x84, 0x0A, 0x01, 0x00, 0xB5, 0x07, 0x00, 0x21, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x24, 0x00, 0x81, 0x0A, 0x01, 0x80, 0xBD, 0x02, 0x00, 0xFD, 0x03, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x25, 0xF8, 0x9F, 0xFA, 0x01, 0x00, 0xC2, 0x02, 0x00, 0x21, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x40, 0x80, 0x0C, 0x01, 0x00, 0xBD, 0x02, 0x00, 0xF9, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFD, 0xE1, 0x8F, 0x0C, 0x81, 0x83, 0x81, 0x02, 0x00, 0x89, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x38, 0x88, 0x0C, 0x01, 0x80, 0x3D, 0x01, 0x00, 0xF9, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x20, 0x88, 0x0F, 0x01, 0x00, 0x65, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0xE0, 0x8F, 0xF8, 0x01, 0x00, 0xA5, 0x02, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x20, 0x88, 0x08, 0x01, 0x00, 0x43, 0x04, 0x00, 0x01, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0x7D, 0x04, 0xF9, 0x01, 0x00, 0xF9, 0x03, 0x00, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x40, 0x04, 0x21, 0x00, 0x00, 0xB2, 0x00, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x40, 0xC4, 0x17, 0x00, 0x00, 0xF8, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x7C, 0x02, 0x13, 0x00, 0x00, 0x48, 0x02, 0x00, 0xF3, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xC0, 0xFF, 0x47, 0x0A, 0xF9, 0x01, 0x80, 0xFB, 0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x8A, 0x0D, 0x01, 0x00, 0x4A, 0x02, 0x80, 0xF2, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x7D, 0x52, 0x0B, 0x81, 0x03, 0xFA, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x14, 0x41, 0x12, 0x09, 0x01, 0x00, 0x4A, 0x02, 0x00, 0xF2, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA3, 0x40, 0x11, 0x09, 0x01, 0x00, 0xCA, 0x03, 0x00, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE5, 0x40, 0x3F, 0xF9, 0x01, 0x00, 0x07, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x40, 0x18, 0x7F, 0xE3, 0x09, 0x01, 0x80, 0xFC, 0x07, 0x00, 0xF2, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x27, 0x00, 0x00, 0x21, 0x00, 0x00, 0x08, 0x00, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x24, 0x00, 0x00, 0xF1, 0x01, 0x00, 0xFF, 0xF3, 0x04, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFA, 0x03, 0x80, 0x13, 0x01, 0x00, 0x01, 0x02, 0x3F, 0x22, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x12, 0x00, 0x80, 0x98, 0x00, 0x00, 0xFF, 0x03, 0x24, 0x22, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0x4A, 0x00, 0xC0, 0x67, 0x00, 0x00, 0x01, 0xFA, 0x25, 0xA3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFA, 0x03, 0x00, 0x21, 0x00, 0x00, 0x01, 0x22, 0xA4, 0x63, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x44, 0x00, 0xC0, 0xFF, 0x81, 0x03, 0xFF, 0x93, 0xA4, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x54, 0x01, 0x00, 0x1D, 0x01, 0x00, 0x01, 0x92, 0x22, 0x2E, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x4F, 0x02, 0x00, 0x15, 0x01, 0x00, 0x01, 0xCA, 0x23, 0x22, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x44, 0x02, 0x00, 0xF3, 0x01, 0x00, 0xFF, 0x3B, 0x21, 0x22, 0x04, 0x00, 0x00, 0x00, 0x00, 0x80, 0x70, 0x00, 0x00, 0x11, 0x01, 0x00, 0x01, 0x82, 0x38, 0xE2, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_help[] U8G_PROGMEM = //操作指南
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0x20, 0x01, 0x12, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x89, 0x30, 0x01, 0xF2, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFB, 0x90, 0xBF, 0x1F, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x90, 0x02, 0xF2, 0xE7, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDF, 0x59, 0x02, 0x02, 0x20, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x15, 0x3E, 0xF6, 0x23, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xDD, 0x15, 0x82, 0x13, 0xA2, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x10, 0x02, 0xF2, 0x23, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFD, 0x13, 0x3E, 0x12, 0xE2, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x10, 0x02, 0xF2, 0x23, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xAF, 0x13, 0x82, 0x13, 0x22, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x24, 0x18, 0x02, 0x08, 0xA8, 0x02, 0x00, 0x00, 0x20, 0x00, 0x83, 0xF8, 0xFC, 0x07, 0x40, 0x00, 0xAC, 0xE7, 0xBF, 0xFF, 0x73, 0x02, 0x40, 0x00, 0xFE, 0xF7, 0x3F, 0x89, 0xA4, 0x04, 0x70, 0x00, 0x74, 0x21, 0x22, 0x04, 0xFC, 0x1E, 0x60, 0x00, 0x20, 0xC0, 0x08, 0x86, 0xFD, 0x07, 0x40, 0x00, 0x24, 0xE1, 0x3F, 0xFA, 0x31, 0x09, 0x50, 0x00, 0xFC, 0xF3, 0xFF, 0x01, 0x40, 0x00, 0x40, 0xFC, 0xFC, 0x2F, 0x22, 0x82, 0xED, 0x09, 0x48, 0x7E, 0x00, 0x00, 0x00, 0xFD, 0xFE, 0x0F, 0x40, 0x00, 0x34, 0x25, 0x22, 0x43, 0x10, 0x0A, 0x48, 0x00, 0xFC, 0xE3, 0x1F, 0x85, 0x08, 0x04, 0x40, 0xFC, 0x6C, 0xE5, 0xBF, 0xFE, 0xFF, 0x04, 0xFC, 0x7E, 0x24, 0x22, 0x10, 0x49, 0xF8, 0x07, 0x40, 0x00, 0x24, 0x25, 0x42, 0x42, 0x48, 0x04, 0x40, 0x00, 0xFC, 0xE3, 0x1F, 0x33, 0x08, 0x04,
  0x40, 0x00, 0xFC, 0x05, 0x42, 0x42, 0x70, 0x0B, 0x40, 0x00, 0x04, 0x22, 0x90, 0x6D, 0x08, 0x04, 0x00, 0x00, 0x80, 0x04, 0x3E, 0x72, 0x8C, 0x11, 0x00, 0x00, 0x02, 0xE0, 0x1F, 0x86, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x21, 0x3E, 0x08, 0xB0, 0x0F, 0x00, 0x00, 0xFF, 0x27, 0x09, 0x08, 0xF8, 0x03, 0x70, 0x00, 0x40, 0xE2, 0x25, 0x10, 0x9C, 0x08, 0x78, 0x00, 0x88, 0x90, 0x10, 0x08, 0x08, 0x02, 0x80, 0x00, 0xFE, 0x9F, 0xBE, 0xFF, 0x93, 0x08, 0x08, 0x00, 0x88, 0xF0, 0x3F, 0x08, 0xF8, 0x03, 0x80, 0x00, 0x4C, 0xF0, 0x01, 0x04, 0xBC, 0x0F, 0x08, 0x00, 0x88, 0x80, 0x00, 0x0C, 0x00, 0x00,
  0x80, 0xFC, 0xD0, 0x66, 0x15, 0xFC, 0x10, 0x00, 0x38, 0x7E, 0xFF, 0xC7, 0x1F, 0x14, 0xFC, 0x07, 0x40, 0x00, 0xE0, 0xE1, 0x7D, 0x84, 0xB8, 0x1F, 0x40, 0x00, 0x88, 0xC0, 0x10, 0x14, 0x04, 0x04, 0x20, 0xFC, 0x50, 0x63, 0x13, 0x84, 0x5C, 0x02, 0x40, 0x7E, 0x88, 0x20, 0x09, 0x22, 0x44, 0x04, 0x10, 0x00, 0x4C, 0xE6, 0x7F, 0x82, 0x94, 0x0F, 0x48, 0x00, 0x8C, 0x20, 0x06, 0x63, 0x44, 0x04, 0xF0, 0x00, 0x42, 0x28, 0x11, 0x81, 0x10, 0x02, 0x30, 0x00, 0x86, 0x10, 0x8F, 0xC1, 0xA0, 0x03, 0x00, 0x00, 0x70, 0xD0, 0x91, 0xF0, 0xD0, 0x1F, 0x00, 0x00, 0x83, 0xE8, 0x70, 0x80, 0x1F, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xFA, 0x0F, 0x06, 0xF1, 0xF9, 0x0F, 0x00, 0x00, 0xF2, 0x03, 0x00, 0x00, 0x40, 0x00, 0x60, 0x00, 0x1C, 0xE1, 0x3F, 0x12, 0x49, 0x09, 0x40, 0x00, 0x14, 0x02, 0x00, 0x00, 0x44, 0x04, 0x90, 0x00, 0xE8, 0x27, 0x09, 0x0C, 0xFB, 0x0F, 0x20, 0x00, 0xF0, 0x03, 0x00, 0x00, 0x44, 0x04, 0x80, 0x00, 0x1E, 0xE1, 0xBF, 0x03, 0x80, 0x00, 0x20, 0x00, 0x17, 0x02, 0x00, 0x00, 0x44, 0x04, 0x60, 0xFC, 0xE8, 0x2F, 0x09, 0xFA, 0xFD, 0x1F, 0x10, 0x7E, 0xF4, 0x03, 0x00, 0x00, 0xFC, 0x07, 0x80, 0x00, 0x4C, 0x24, 0x0F, 0x0A, 0x11, 0x08, 0x10, 0x00, 0x54, 0x04, 0x00, 0x00, 0x40, 0x00, 0x80, 0xFC, 0xDC, 0x27, 0x00, 0x92, 0xF0, 0x0F, 0x10, 0x7E, 0x94, 0x03, 0x00, 0x00, 0x44, 0x04, 0x90, 0x00, 0x5A, 0xE4, 0x1F, 0x66, 0x10, 0x08, 0x08, 0x00, 0x54, 0x03, 0x00, 0x00, 0x44, 0x04,
  0x70, 0x00, 0xCA, 0x97, 0x09, 0xDB, 0x10, 0x08, 0x08, 0x00, 0x3E, 0x04, 0x00, 0x00, 0xFC, 0x07, 0x00, 0x00, 0x48, 0xF7, 0x3F, 0x0C, 0xFF, 0x1F, 0x04, 0x00, 0xF9, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_setbuzzer[] U8G_PROGMEM = //声音设置
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xF0, 0x3F, 0xE2, 0xC7, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x47, 0x08, 0x24, 0x44, 0x92, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x80, 0x04, 0x38, 0xC4, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xF3, 0x3F, 0x18, 0x0C, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE3, 0x1F, 0xF4, 0x87, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x22, 0x10, 0x24, 0x84, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xE3, 0x1F, 0x44, 0x82, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x10, 0x8C, 0x81, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x1F, 0x62, 0x83, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x20, 0x10, 0x18, 0xEC, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_setdigits[] U8G_PROGMEM = //精度设置
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x00, 0x06, 0xE2, 0xC7, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFE, 0xE7, 0x7F, 0x24, 0x44, 0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x20, 0x11, 0x38, 0xC4, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0xE0, 0x7F, 0x18, 0x0C, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF7, 0x27, 0x11, 0x07, 0xE0, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x22, 0x1F, 0xF4, 0x87, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF7, 0x23, 0x00, 0x24, 0x84, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xA2, 0x3F, 0x44, 0x82, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFA, 0x23, 0x11, 0x8C, 0x81, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x12, 0x12, 0x0E, 0x62, 0x83, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0xF3, 0xF1, 0x18, 0xEC, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static unsigned char u8g_exfunc[] U8G_PROGMEM = //高级运算
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xA0, 0x1F, 0xF2, 0xC7, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x17, 0x11, 0x04, 0x20, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x49, 0x09, 0x04, 0x80, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x39, 0x39, 0xF8, 0x8F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x23, 0x47, 0x80, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x1B, 0x23, 0x24, 0x81, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7A, 0x15, 0x24, 0x82, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFD, 0x82, 0x1D, 0x94, 0x83, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0xE2, 0x08, 0x74, 0xE4, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFD, 0x9A, 0x36, 0x0E, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x43, 0x63, 0xF1, 0xCF, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x84, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x07, 0x48, 0x00, 0x00, 0x00, 0xC0, 0xE1, 0xC7, 0x44, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0xC0, 0x31, 0x00, 0x00, 0x00, 0x00, 0x02, 0x80, 0x85, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x07, 0x30, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x07, 0x85, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x48, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x43, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x84, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x22, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x40, 0x00, 0x01, 0x00, 0x00, 0x80, 0x03, 0xE0, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x01, 0x00, 0x00, 0x80, 0x00, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x40, 0x21, 0x01, 0x00, 0x00, 0x40, 0x00, 0x60, 0x40, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x47, 0x12, 0x01, 0x00, 0x00, 0xC0, 0xE3, 0x87, 0x4C, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x0C, 0x01, 0x00, 0x00, 0x40, 0x04, 0xE0, 0x58, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0x47, 0x0C, 0x01, 0x00, 0x00, 0x40, 0xE4, 0x07, 0x50, 0x18, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x40, 0x12, 0x01, 0x00, 0x00, 0x40, 0x04, 0x00, 0x30, 0x24, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0x40, 0x21, 0x01, 0x00, 0x00, 0x80, 0x03, 0x00, 0x20, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x70, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x44, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0xC3, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0xE3, 0x47, 0x22, 0x00, 0x00, 0x00, 0x00, 0xE1, 0x47, 0x44, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x80, 0x71, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x27, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x87, 0x01, 0x00, 0x00, 0x00, 0x80, 0xE0, 0x47, 0x00, 0xC0, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x04, 0x40, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0xC0, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x80, 0x03, 0x20, 0x04, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x03, 0x10, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x70, 0x00, 0x00, 0x00, 0x80, 0x03, 0x40, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x04, 0x40, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x05, 0x20, 0x34, 0x00, 0x00, 0x00, 0x40, 0x04, 0x40, 0x1A, 0x12, 0x22, 0x00,
  0x00, 0x00, 0x80, 0xE4, 0x47, 0x42, 0x00, 0x00, 0x00, 0x80, 0xE3, 0x47, 0x26, 0x22, 0x21, 0x00, 0x00, 0x00, 0x80, 0x04, 0x80, 0x71, 0x00, 0x00, 0x00, 0x40, 0x04, 0x40, 0x22, 0xC2, 0x20, 0x00, 0x00, 0x00, 0xC0, 0xEF, 0x87, 0x01, 0x00, 0x00, 0x00, 0x40, 0xE4, 0x47, 0x22, 0xC2, 0x20, 0x00, 0x00, 0x00, 0x00, 0x04, 0x40, 0x02, 0x00, 0x00, 0x00, 0x40, 0x04, 0x40, 0x22, 0x22, 0x21, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x04, 0x00, 0x00, 0x00, 0x80, 0x03, 0x40, 0x22, 0x12, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

void setup() {
  //EEPROM.write(3, 2); 擦除位数设置
  digits = EEPROM.read(3); //读取位数设置
  buzzer = EEPROM.read(4); //读取声音设置
  pinMode(2, INPUT); //设置高级运算按键引脚为输入方式
  pinMode(9, INPUT); //设置退格按键引脚为输入方式
  pinMode(11, OUTPUT); //设置蜂鸣器引脚为输出方式
  pinMode(10, OUTPUT); //设置LED引脚为输出方式
  digitalWrite(2, HIGH); //开启接口内部上拉电阻
  digitalWrite(9, HIGH); //开启接口内部上拉电阻
  digitalWrite(11, LOW); //将蜂鸣器置于低电平
  u8g.setFont(u8g_font_courB14); //设置字体
  do {
    x = x + 8;
    light = light + 10;
    analogWrite(10, light);
    u8g.firstPage(); //开机画面
    do {
      u8g.drawXBMP( 0, 0, 128, 64, u8g_welcome);
      u8g.drawHLine(0, 0, 2 * x);
      u8g.drawHLine( 128 - 2 * x, 63, 128);
      u8g.drawVLine(0, 0, x);
      u8g.drawVLine(127, 64 - x, 64);
    } while (u8g.nextPage());
  } while (x < 64);
  if (buzzer == 1) digitalWrite(11, HIGH); //开启蜂鸣器
  delay(50);
  digitalWrite(11, LOW); //关闭蜂鸣器
  analogWrite(10, 10);
  light = 0;
}

void loop() {
  char key = keypad.getKey(); //取得矩阵键盘按键情况
  if (digitalRead(9) == LOW) { //判断退格键是否按下
    deltime++;
    if (deltime <= 3) key = 'B'; //一级删除
    if (deltime == 6) { //二级删除
      key = 'B';
      arrow = 0; //指针复位
      memset(str, 0, sizeof(str)); //清空输入字符串
      symbol = 0; //清空运算符
    }
    screencontroller();
  }
  if (digitalRead(9) == HIGH) deltime = 0; //复位时长
  if (digitalRead(2) == LOW) { //判断高级运算键是否按下
    key = 'A';
    if (menu == 0) menu = 9;
  }
  if (key) {
    if (strchr(str, '.') == 0) maxlength = 6;
    else maxlength = 7;
    switch (key) //对返回的按键进行讨论
    {
      case 'A': //按下高级运算键
        break;

      case 'B': //按下退格键
        if (arrow != 0) arrow--; //前移指针时防止下标越界
        str[arrow] = '\0'; //通过在指针位置标记结束位来缩短字符串长度
        if (menu == 2) {
          numtosave = atoi(str);
          EEPROM.write(0, numtosave / 100); //将位1写入EEPROM
          EEPROM.write(1, (numtosave / 10) % 10); //将位2写入EEPROM
          EEPROM.write(2, numtosave % 10); //将位3写入EEPROM
        }
        break;

      case '+': //按下加号
        if (menu == 0) {
          process();
          symbol = 1; //保存加号到符号位
        }
        break;

      case '-': //按下减号
        if (menu == 0) {
          process();
          symbol = 2; //保存减号到符号位
        }
        break;

      case '*': //按下乘号
        if (menu == 0) {
          process();
          symbol = 3; //保存乘号到符号位
        }
        break;

      case '/': //按下除号
        if (menu == 0) {
          process();
          symbol = 4; //保存除号到符号位
        } else if (menu == 1 || menu == 9) { //判断除号此时是否用于返回
          menu = 0;
        } else if (menu > 1 && menu != 9) menushow();
        break;

      case '.':
        if (menu != 1 && menu != 2 && menu != 6 && strchr(str, '.') == 0 && arrow <= maxlength) str[arrow++] = key; //限制输入小数点为一位且控制字符串长度以防止下标越界
        break;

      case '=':
        if (menu == 0) {
          stat = 1; //记录等号按下状态
          process();
          symbol = 0; //将符号位恢复为初始状态
        } else if (menu == 3) {
          a = atof(str); //输入参数a
          menu = 4;
          arrow = 0; //指针复位
          memset(str, 0, sizeof(str)); //清空输入字符串
        } else if (menu == 4) {
          b = atof(str); //输入参数b
          menu = 5;
        }
        break;

      default:
        switch (menu) {
          case 0: //四则运算状态
            if (str[0] == '0' && arrow == 1) arrow = 0; //不允许输入的数以一个或更多的0开头
            if (arrow <= maxlength) str[arrow++] = key; //控制字符串长度以防止下标越界
            break;

          case 1: //已进入菜单状态
            switch (key) {
              case '0':
                menu = 10; //进入按键说明
                break;

              case '1':
                menu = 2; //进入功能1并改变附加功能状态
                savednum = EEPROM.read(0) * 100 + EEPROM.read(1) * 10 + EEPROM.read(2); //将EEPROM中3个地址位的值进行合并
                break;

              case '2':
                menu = 3;//进入功能2并改变附加功能状态
                break;

              case '3':
                menu = 6; //进入功能3并改变附加功能状态
                digits = EEPROM.read(3);
                break;

              case '4':
                menu = 7; //进入功能4并改变附加功能状态
                buzzer = EEPROM.read(4);
                break;

              case '5':
                menu = 8; //进入功能5并改变附加功能状态
                break;
            }
            break;

          case 2: //数值保存状态
            if (str[0] == '0' && arrow == 1) arrow = 0; //不允许输入的数以一个或更多的0开头
            if (arrow <= 2) str[arrow++] = key; //控制字符串长度以防止下标越界
            numtosave = atoi(str);
            EEPROM.write(0, numtosave / 100); //将位1写入EEPROM
            EEPROM.write(1, (numtosave / 10) % 10); //将位2写入EEPROM
            EEPROM.write(2, numtosave % 10); //将位3写入EEPROM
            break;

          case 3:
            if (str[0] == '0' && arrow == 1) arrow = 0; //不允许输入的数以一个或更多的0开头
            if (arrow <= maxlength) str[arrow++] = key; //控制字符串长度以防止下标越界
            break;

          case 4:
            if (str[0] == '0' && arrow == 1) arrow = 0; //不允许输入的数以一个或更多的0开头
            if (arrow <= maxlength) str[arrow++] = key; //控制字符串长度以防止下标越界
            break;

          case 6:
            if (key - '0' <= 6) digits = key - '0';
            EEPROM.write(3, digits); //保存精度设置到EEPROM
            break;

          case 7:
            if (key - '0' <= 1) buzzer = key - '0';
            EEPROM.write(4, buzzer); //保存声音设置到EEPROM
            break;

          case 9:
            if (arrow != 0) result = atof(str); //判断对哪一次输入进行运算
            switch (key) {
              case '1': //-x
                result = -result;
                break;

              case '2': //|x|
                result = abs(result);
                break;

              case '3': //x^2
                result =  result * result;
                break;

              case '4': //x^3
                result =  result * result * result;
                break;

              case '5': //x^(1/2)
                result =  sqrt(result);
                break;

              case '6': //x^(1/3)
                result =  pow(result, 1.0 / 3);
                break;

              case '7': //exp(x)
                result = exp(result);
                break;

              case '8': //ln(x)
                result = log(result);
                break;
            }
            menu = 0; //退回基本运算界面
            arrow = 0; //指针复位
            memset(str, 0, sizeof(str)); //清空输入字符串
            stat = 1; //将状态改为运算完毕
            symbol = 0; //复位符号
            break;

          case 10: //已进入操作指南
            switch (key) {
              case '1':
                menu = 2; //进入功能1并改变附加功能状态
                savednum = EEPROM.read(0) * 100 + EEPROM.read(1) * 10 + EEPROM.read(2); //将EEPROM中3个地址位的值进行合并
                break;

              case '2':
                menu = 3;//进入功能2并改变附加功能状态
                break;

              case '3':
                menu = 6; //进入功能3并改变附加功能状态
                digits = EEPROM.read(3);
                break;

              case '4':
                menu = 7; //进入功能4并改变附加功能状态
                buzzer = EEPROM.read(4);
                break;

              case '5':
                menu = 8; //进入功能5并改变附加功能状态
                break;
            }
            break;
        }
        break;
    }
    analogWrite(10, 80);
    if (buzzer == 1) {
      digitalWrite(11, HIGH); //开启蜂鸣器
      delay(10);
      digitalWrite(11, LOW); //关闭蜂鸣器
    }
    screencontroller();
    analogWrite(10, 10);
  }
}

void process() {
  str[arrow] = '\0'; //对指针位置标记字符串结束
  if (arrow != 0) { //判断键入是否为空
    switch (symbol) //对上一次的符号位进行讨论
    {
      case 0: //不存在上一次的符号
        result = atof(str);
        break;

      case 1: //上一次的符号为加号
        result = result + atof(str); //执行加法运算
        break;

      case 2: //上一次的符号为减号
        result = result - atof(str); //执行减法运算
        break;

      case 3: //上一次的符号为乘号
        result = result * atof(str); //执行乘法运算
        break;

      case 4: //上一次的符号为除号
        if (atof(str) != 0) result = result / atof(str); //在除数不为0的情况下执行除法运算
        else stat = 2; //若除数为0则标记状态异常
        break;
    }
    arrow = 0; //指针复位
    memset(str, 0, sizeof(str)); //清空输入字符串
  }
}

void screencontroller() {
  switch (menu) {
    case 0: //未进入菜单的画面绘制
      switch (stat) {
        case 0: //四则运算的画面绘制
          if (symbol == 0) { //无符号输入界面
            u8g.firstPage();
            do {
              u8g.drawXBMP( 0, 0, 128, 32, u8g_uestc);
              u8g.setPrintPos(0, 46);
              u8g.print(str);
            } while (u8g.nextPage());
          } else { //带符号输入界面
            u8g.firstPage();
            do {
              u8g.drawXBMP( 0, 0, 128, 32, u8g_uestc);
              u8g.setPrintPos(0, 46);
              u8g.print(result, digits);
              u8g.setPrintPos(0, 63);
              u8g.print(str);
              u8g.setPrintPos(127 - 11, 63);
              switch (symbol) {
                case 1:
                  u8g.print('+');
                  break;

                case 2:
                  u8g.print('-');
                  break;

                case 3:
                  u8g.print('*');
                  break;

                case 4:
                  u8g.print('/');
                  break;
              }
            } while (u8g.nextPage());
          }
          break;

        case 1: //运算结果的画面绘制
          u8g.firstPage();
          do {
            u8g.drawXBMP( 0, 0, 128, 32, u8g_uestc);
            u8g.setPrintPos(0, 46);
            u8g.print(result, digits);
            u8g.setPrintPos(127 - 11, 63);
            u8g.print('=');
          } while (u8g.nextPage());
          stat = 0;
          break;

        case 2: //出错的画面绘制
          x = 1;
          do { //除数为0的弹错动画
            light = light + 10;
            analogWrite(10, light);
            u8g.firstPage();
            do {
              u8g.drawXBMP( 0, 0, 128, 32, u8g_error);
              u8g.setPrintPos(x, 46);
              u8g.print("Error!");
              u8g.setPrintPos(61 - x, 63);
              u8g.print("Orz...");
            } while (u8g.nextPage());
            x = x + 10;
          } while (x < 61);
          delay (500);
          menushow();
          if (buzzer == 1) digitalWrite(11, HIGH); //开启蜂鸣器
          delay(50);
          digitalWrite(11, LOW); //关闭蜂鸣器
          analogWrite(10, 10);
          light = 0;
          break;
      }
      break;

    case 2: //断电存储的画面绘制
      u8g.firstPage();
      do {
        u8g.drawXBMP( 0, 0, 128, 32, u8g_eeprom);
        u8g.setPrintPos(0, 46);
        u8g.print("EEPROM:");
        u8g.setPrintPos(77, 46);
        u8g.print(savednum);
        u8g.setPrintPos(0, 63);
        u8g.print("Rewrite:");
        u8g.drawStr(127 - u8g.getStrWidth(str), 63, str);
      } while (u8g.nextPage());
      break;

    case 3: //解方程一级画面绘制
      u8g.firstPage();
      do {
        u8g.drawXBMP( 0, 0, 128, 32, u8g_fx);
        u8g.setPrintPos(0, 46);
        u8g.print("STEP 1");
        u8g.setPrintPos(0, 63);
        u8g.print("a=");
        u8g.drawStr(127 - u8g.getStrWidth(str), 63, str);
      } while (u8g.nextPage());
      break;

    case 4: //解方程二级画面绘制
      u8g.firstPage();
      do {
        u8g.drawXBMP( 0, 0, 128, 32, u8g_fx);
        u8g.setPrintPos(0, 46);
        u8g.print("STEP 2");
        u8g.setPrintPos(0, 63);
        u8g.print("b=");
        u8g.drawStr(127 - u8g.getStrWidth(str), 63, str);
      } while (u8g.nextPage());
      break;

    case 5: //解方程三级画面绘制
      u8g.firstPage();
      do {
        u8g.drawXBMP( 0, 0, 128, 32, u8g_fx);
        u8g.setPrintPos(0, 46);
        u8g.print("Result:");
        u8g.setPrintPos(0, 63);
        u8g.print("x=");
        u8g.setPrintPos(22, 63);
        u8g.print(solvefx(), 5);
      } while (u8g.nextPage());
      break;

    case 6: //精度设置画面绘制
      u8g.firstPage();
      do {
        u8g.drawXBMP( 0, 0, 128, 32, u8g_setdigits);
        u8g.setPrintPos(59, 52);
        u8g.print(digits);
      } while (u8g.nextPage());
      break;

    case 7: //声音设置画面绘制
      u8g.firstPage();
      do {
        u8g.drawXBMP( 0, 0, 128, 32, u8g_setbuzzer);
        if (buzzer == 0)
        {
          u8g.setPrintPos(47, 52);
          u8g.print("OFF");
        }
        else
        {
          u8g.setPrintPos(52, 52);
          u8g.print("ON");
        }
      } while (u8g.nextPage());
      break;

    case 8: //开发者画面绘制
      u8g.firstPage();
      do {
        u8g.drawXBMP( 0, 0, 128, 64, u8g_developers);
      } while (u8g.nextPage());
      break;

    case 9: //高级运算功能
      u8g.firstPage();
      do {
        u8g.drawXBMP( 0, 0, 128, 64, u8g_exfunc);
      } while (u8g.nextPage());
      break;

    case 10: //操作指南画面绘制
      u8g.firstPage();
      do {
        u8g.drawXBMP( 0, 0, 128, 64, u8g_help);
      } while (u8g.nextPage());
      break;
  }
}

void menushow() { //主菜单界面
  menu = 1;
  stat = 0;
  arrow = 0; //指针复位
  memset(str, 0, sizeof(str)); //清空输入字符串
  result = 0;
  u8g.firstPage(); //进入菜单的动画
  do {
    u8g.drawXBMP( 0, 0, 128, 32, u8g_menu);
    u8g.setPrintPos(16, 55);
    u8g.print("-PRESS 0-");
    u8g.drawFrame(20, 39, 90, 21);
  } while (u8g.nextPage());
}

double solvefx() { //二分法求解方程函数
  double minimum = 0, maximum = 20, mid = (minimum + maximum) / 2;
  while (maximum - minimum > 1e-6)
  {
    if (fx(mid) > 0)maximum = mid;
    else if (fx(mid) < 0)minimum = mid;
    else break;
    mid = (minimum + maximum) / 2;
  }
  return mid;
}

double fx(double x) //超越方程
{
  return a * x + exp(x) - b;
}

